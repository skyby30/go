/*
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine
 *
 * OpenAPI spec version: 3.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package nutanix

// Get Entities Request.
type GroupsGetEntitiesRequest struct {

	// For grouping, the boundary to snap to when grouping.
	BucketBoundary int64 `json:"bucket_boundary,omitempty" bson:"bucket_boundary,omitempty"`

	// Downsampling interval to apply to query if override is desired.
	DownsamplingInterval int64 `json:"downsampling_interval,omitempty" bson:"downsampling_interval,omitempty"`

	// A set of entities that the request will be scoped to.
	EntityIds []string `json:"entity_ids,omitempty" bson:"entity_ids,omitempty"`

	// The entity type that will be requested.
	EntityType string `json:"entity_type,omitempty" bson:"entity_type,omitempty"`

	// FIQL filter criteria that will be used to filter the returned data.
	FilterCriteria string `json:"filter_criteria,omitempty" bson:"filter_criteria,omitempty"`

	GroupAttributes []GroupsRequestedAttribute `json:"group_attributes,omitempty" bson:"group_attributes,omitempty"`

	// The maximum number of groups to return in the result.
	GroupCount int64 `json:"group_count,omitempty" bson:"group_count,omitempty"`

	GroupMemberAttributes []GroupsRequestedAttribute `json:"group_member_attributes,omitempty" bson:"group_member_attributes,omitempty"`

	// The maximum number of members to return per group.
	GroupMemberCount int64 `json:"group_member_count,omitempty" bson:"group_member_count,omitempty"`

	// The offset into the total member set to return per group.
	GroupMemberOffset int64 `json:"group_member_offset,omitempty" bson:"group_member_offset,omitempty"`

	// The name of the attribute that will be used to sort group members.
	GroupMemberSortAttribute string `json:"group_member_sort_attribute,omitempty" bson:"group_member_sort_attribute,omitempty"`

	// Downsampling function to take time series data and resolve to one value for sorting purposes.
	GroupMemberSortDownsamplingFunction string `json:"group_member_sort_downsampling_function,omitempty" bson:"group_member_sort_downsampling_function,omitempty"`

	// Sort order for entities and entity groups.
	GroupMemberSortOrder string `json:"group_member_sort_order,omitempty" bson:"group_member_sort_order,omitempty"`

	// The offset into the total set of groups to return.
	GroupOffset int64 `json:"group_offset,omitempty" bson:"group_offset,omitempty"`

	// The name of the attribute that will be used to sort groups.
	GroupSortAttribute string `json:"group_sort_attribute,omitempty" bson:"group_sort_attribute,omitempty"`

	// Downsampling function to take time series data and resolve to one value for sorting purposes.
	GroupSortDownsampleFunction string `json:"group_sort_downsample_function,omitempty" bson:"group_sort_downsample_function,omitempty"`

	// Sort order for entities and entity groups.
	GroupSortOrder string `json:"group_sort_order,omitempty" bson:"group_sort_order,omitempty"`

	// Attribute that will be used to perform a group-by if needed.
	GroupingAttribute string `json:"grouping_attribute,omitempty" bson:"grouping_attribute,omitempty"`

	// The type of an attribute being used for grouping - may be continuous or discrete.
	GroupingAttributeType string `json:"grouping_attribute_type,omitempty" bson:"grouping_attribute_type,omitempty"`

	// For a time-series query, the end of the interval since the epoch in ms. Default is latest value only.
	IntervalEndMs int64 `json:"interval_end_ms,omitempty" bson:"interval_end_ms,omitempty"`

	// For a time-series query, the start of the interval since the epoch in ms. Default is latest value only.
	IntervalStartMs int64 `json:"interval_start_ms,omitempty" bson:"interval_start_ms,omitempty"`

	// For grouping, how many groups to return.
	NumberOfBuckets int64 `json:"number_of_buckets,omitempty" bson:"number_of_buckets,omitempty"`

	// When retrieving latest values, how far back to look as a multiple of the downsampling interval for the metric.
	NumberOfIntervalsForLatestData int64 `json:"number_of_intervals_for_latest_data,omitempty" bson:"number_of_intervals_for_latest_data,omitempty"`

	// A custom name to use for tagging the query when debugging.
	QueryName string `json:"query_name,omitempty" bson:"query_name,omitempty"`
}
