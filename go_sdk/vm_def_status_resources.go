/*
 * Nutanix Intentful API
 *
 * Move programming from the user to the machine
 *
 * OpenAPI spec version: 3.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package nutanix

type VmDefStatusResources struct {

	// Indicates which device the VM should boot from.
	BootConfig VmBootConfig `json:"boot_config,omitempty" bson:"boot_config,omitempty"`

	// Disks attached to the VM.
	DiskList []VmDisk `json:"disk_list,omitempty" bson:"disk_list,omitempty"`

	// GPUs attached to the VM.
	GpuList []VmGpuOutputStatus `json:"gpu_list,omitempty" bson:"gpu_list,omitempty"`

	GuestCustomization GuestCustomizationStatus `json:"guest_customization,omitempty" bson:"guest_customization,omitempty"`

	HostReference Reference `json:"host_reference,omitempty" bson:"host_reference,omitempty"`

	// The hypervisor type for the hypervisor the VM is hosted on.
	HypervisorType string `json:"hypervisor_type,omitempty" bson:"hypervisor_type,omitempty"`

	// Memory size in MiB.
	MemorySizeMib int64 `json:"memory_size_mib,omitempty" bson:"memory_size_mib,omitempty"`

	// NICs attached to the VM.
	NicList []VmNicOutputStatus `json:"nic_list,omitempty" bson:"nic_list,omitempty"`

	// Number of vCPU sockets.
	NumSockets int64 `json:"num_sockets,omitempty" bson:"num_sockets,omitempty"`

	// Number of vCPUs per socket.
	NumVcpusPerSocket int64 `json:"num_vcpus_per_socket,omitempty" bson:"num_vcpus_per_socket,omitempty"`

	// Reference to an entity that the VM cloned from.
	ParentReference Reference `json:"parent_reference,omitempty" bson:"parent_reference,omitempty"`

	// Desired power state of the VM.
	PowerState string `json:"power_state,omitempty" bson:"power_state,omitempty"`
}
